name: Create Release PR

on:
  workflow_dispatch:

jobs:
  create-release-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Count today's PRs
        id: pr_count
        run: |
          PR_COUNT=$(gh pr list --base main --state open --search "${{ env.date }} - release" --json title --jq 'length')
          echo "count=$((PR_COUNT + 1))" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find last merged PR from qa to main
        id: last_merge
        run: |
          LAST_PR=$(gh pr list --base main --head qa --state merged --limit 1 --json mergedAt --jq '.[0].mergedAt')
          echo "last_merged=${LAST_PR:-1970-01-01T00:00:00Z}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get merged PRs from qa to main since last release
        id: merged_prs
        run: |
          # Get the list of PRs merged from `qa` to `main` since the last release
          PR_LIST=$(gh pr list --base main --head qa --state merged --since="${{ env.last_merged }}" --json number,title,url --jq '.[] | "- [#\(.number)](\(.url)): \(.title)"' )

          if [[ -z "$PR_LIST" ]]; then
            PR_LIST="No PRs merged since last release."
          fi

          # Clean up unwanted \n\n and ensure the correct newline format
          CLEANED_PR_LIST=$(echo "$PR_LIST" | sed ':a;N;$!ba;s/\n\n/\n/g')

          # Store the cleaned PR list in a temporary file (safe for multi-line output)
          echo "$CLEANED_PR_LIST" > pr_list.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR from qa to main
        run: |
          # Read the cleaned PR list from the temporary file
          BODY=$"- Included PRs:\n$(cat pr_list.txt)\n"

          # Create the PR with the formatted title and body using the $'...' syntax to interpret newlines
          gh pr create --base main --head qa \
            --title "${{ env.date }} - release ${{ env.count }}" \
            --body $BODY
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
